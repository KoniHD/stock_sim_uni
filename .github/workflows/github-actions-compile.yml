# This workflow runs CMake builds on multiple platforms and handles testing
name: CMake build and test multiple platforms

on:
  push:
    branches: [ "main" ]
    paths:
      - "include/**"
      - "src/**"
      - "tests/**"
  pull_request:
    branches: [ "main" ]
    paths:
      - "include/**"
      - "src/**"
      - "tests/**"
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        target: [stockmarket, stockmarket_tests]
        include:
          - os: windows-latest
            cpp_compiler: cl
          - os: ubuntu-latest
            cpp_compiler: g++
          - os: ubuntu-latest
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Clone doctest (latest release)
      run: |
        # Clone the latest release of doctest
        git clone --depth 1 --branch v2.4.11 https://github.com/doctest/doctest.git

    - name: Configure CMake
      run: |
        cmake --version
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
              -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -S ${{ github.workspace }}

    - name: Build
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --target ${{ matrix.target }}

    - name: Build tests
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --target ${{ matrix.target }}

    - name: Run tests
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }} --output-on-failure